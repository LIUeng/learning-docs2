import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.7c0fadea.js";const p="/learning-docs2/assets/images/virtual_list.png",d=JSON.parse('{"title":"PC虚拟列表如何处理","description":"","frontmatter":{},"headers":[],"relativePath":"articles/advanced/virtualList.md","filePath":"articles/advanced/virtualList.md","lastUpdated":1675328164000}'),o={name:"articles/advanced/virtualList.md"},e=l('<h1 id="pc虚拟列表如何处理" tabindex="-1">PC虚拟列表如何处理 <a class="header-anchor" href="#pc虚拟列表如何处理" aria-label="Permalink to &quot;PC虚拟列表如何处理&quot;">​</a></h1><img src="'+p+`"><p><code>针对场景</code></p><blockquote><p>页面需要渲染上千个上万个节点甚至更多，导致页面卡顿</p></blockquote><h2 id="常见解决方案" tabindex="-1">常见解决方案 <a class="header-anchor" href="#常见解决方案" aria-label="Permalink to &quot;常见解决方案&quot;">​</a></h2><ul><li>分页</li><li>滚动到底部加载（如果不对上一页数据节点处理，照样会造成页面节点太多卡顿的问题）</li></ul><h2 id="iscroll-方案-使用-transform-或者-top" tabindex="-1">IScroll 方案 (使用 transform 或者 top) <a class="header-anchor" href="#iscroll-方案-使用-transform-或者-top" aria-label="Permalink to &quot;IScroll 方案 (使用 transform 或者 top)&quot;">​</a></h2><p>假设：固定渲染每页大小 10 条，每一项高度固定 100</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;container&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;overflow: auto;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;scroll-container&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;position: absolute; width: 100%;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;row&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;position: absolute; top: 0px; height: 100px; width: 100%;&quot;</span><span style="color:#E1E4E8;">&gt;1&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;row&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;position: absolute; top: 900px; height: 100px; width: 100%;&quot;</span><span style="color:#E1E4E8;">&gt;10&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;container&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;overflow: auto;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;scroll-container&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position: absolute; width: 100%;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;row&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position: absolute; top: 0px; height: 100px; width: 100%;&quot;</span><span style="color:#24292E;">&gt;1&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;row&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position: absolute; top: 900px; height: 100px; width: 100%;&quot;</span><span style="color:#24292E;">&gt;10&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>思考</code></p><ul><li>需要在容器滚动时，实时监听滚动的高度，对已有节点进行替换操作</li><li>如何通过时刻变化的滚动高度计算出替换的节点</li></ul><p><strong>实现</strong></p><p><a href="https://6r232.csb.app/" target="_blank" rel="noreferrer">演示地址</a></p><p><a href="https://codesandbox.io/s/intelligent-kowalevski-6r232" target="_blank" rel="noreferrer">演示代码</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 这里只针对于计算部分的代码</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Number}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">offset</span><span style="color:#6A737D;"> 滚动高度</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">offset</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> overscancount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 滚动预留 2 * 100 高度，才开始替换操作</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 开始滚动计算</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 页的大小10 每一项的高度100 目标元素</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> itemSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, itemHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, elements </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 计算滚动之后的需要替换的节点个数（按顺序）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> minorPhase </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(offset </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> itemHeight) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> overscancount);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 计算当前页数</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// minorPhase &gt; 10 时，取整 + 总高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> majorPhase </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(minorPhase </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> itemSize);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 页数对应替换节点高度的基准 这里 phase &lt; 10 等式要必须成立</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// &gt; 10 高度计算有误</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> phase </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> minorPhase </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> majorPhase </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemSize;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 计算样式 top</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> itemSize) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// top 初始的高度</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> top </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemHeight </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> majorPhase </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemSize </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(phase </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> i) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 分页之后 加上总高度</span></span>
<span class="line"><span style="color:#E1E4E8;">      top </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> itemSize </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 设置元素样式</span></span>
<span class="line"><span style="color:#E1E4E8;">    elements[i].style.top </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> top </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;px&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 这里只针对于计算部分的代码</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Number}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">offset</span><span style="color:#6A737D;"> 滚动高度</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(</span><span style="color:#E36209;">offset</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> overscancount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 滚动预留 2 * 100 高度，才开始替换操作</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 开始滚动计算</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 页的大小10 每一项的高度100 目标元素</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> itemSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, itemHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, elements </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 计算滚动之后的需要替换的节点个数（按顺序）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> minorPhase </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(offset </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> itemHeight) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> overscancount);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 计算当前页数</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// minorPhase &gt; 10 时，取整 + 总高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> majorPhase </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(minorPhase </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> itemSize);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 页数对应替换节点高度的基准 这里 phase &lt; 10 等式要必须成立</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// &gt; 10 高度计算有误</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> phase </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> minorPhase </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> majorPhase </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemSize;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 计算样式 top</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> itemSize) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// top 初始的高度</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> top </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemHeight </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> majorPhase </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemSize </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemHeight;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(phase </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> i) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 分页之后 加上总高度</span></span>
<span class="line"><span style="color:#24292E;">      top </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> itemSize </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemHeight;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 设置元素样式</span></span>
<span class="line"><span style="color:#24292E;">    elements[i].style.top </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> top </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;px&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre></div><p><code>局限性</code></p><ul><li>高度固定</li></ul><h2 id="react-window-解决方案" tabindex="-1">react-window 解决方案 <a class="header-anchor" href="#react-window-解决方案" aria-label="Permalink to &quot;react-window 解决方案&quot;">​</a></h2><p><a href="https://en33d.csb.app/" target="_blank" rel="noreferrer">演示地址</a></p><p><a href="https://codesandbox.io/s/inspiring-blackwell-en33d" target="_blank" rel="noreferrer">演示代码</a></p><blockquote><p>react-window 通过实时滚动监听来对开始位置 start index 和结束位置 stop index 的计算，来渲染出数据</p></blockquote><h3 id="高度固定" tabindex="-1">高度固定 <a class="header-anchor" href="#高度固定" aria-label="Permalink to &quot;高度固定&quot;">​</a></h3><ul><li>高度固定 100</li><li>保证计算的开始位置和结束位置都在可视区域</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 只针对计算代码的书写</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> itemCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 总数据条数</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> itemHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 每一项高度</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 滚动高度</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> overscancount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 预留 2 项 每次多展示两条数据</span></span>
<span class="line"><span style="color:#6A737D;">// 获取开始位置</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStartIndexForOffset</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">offset</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> startIndex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(offset </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> itemHeight), itemCount </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  return startIndex;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取结束位置</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStopIndexForOffset</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">offset</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 开始位置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> startIndex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStartIndexForOffset</span><span style="color:#E1E4E8;">(offset);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 计算开始位置滚动条高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> offstart </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> startIndex </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> itemHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 计算可视区域数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 这里要保证可视区域必定要有数据展示，不能出现空白</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 开始偏移高度 + 总的滚动高度 - 偏移高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> visibleItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">((offstart </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> height </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> offset) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> itemHeight);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 返回结束位置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(itemCount </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, startIndex </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> visibleItem </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 渲染数据</span></span>
<span class="line"><span style="color:#E1E4E8;">[].slice.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(data, Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, startIndex </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> overscancount), Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(stopIndex </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> overscancount, itemCount </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)))</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 只针对计算代码的书写</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> itemCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 总数据条数</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> itemHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 每一项高度</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 滚动高度</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> overscancount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 预留 2 项 每次多展示两条数据</span></span>
<span class="line"><span style="color:#6A737D;">// 获取开始位置</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStartIndexForOffset</span><span style="color:#24292E;">(</span><span style="color:#E36209;">offset</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> startIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(offset </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> itemHeight), itemCount </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  return startIndex;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取结束位置</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStopIndexForOffset</span><span style="color:#24292E;">(</span><span style="color:#E36209;">offset</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 开始位置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> startIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStartIndexForOffset</span><span style="color:#24292E;">(offset);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 计算开始位置滚动条高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> offstart </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> startIndex </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> itemHeight;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 计算可视区域数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 这里要保证可视区域必定要有数据展示，不能出现空白</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 开始偏移高度 + 总的滚动高度 - 偏移高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> visibleItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">((offstart </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> offset) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> itemHeight);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 返回结束位置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(itemCount </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, startIndex </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> visibleItem </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 渲染数据</span></span>
<span class="line"><span style="color:#24292E;">[].slice.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(data, Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, startIndex </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> overscancount), Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(stopIndex </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> overscancount, itemCount </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre></div><h3 id="高度改变" tabindex="-1">高度改变 <a class="header-anchor" href="#高度改变" aria-label="Permalink to &quot;高度改变&quot;">​</a></h3><ul><li>高度随机</li><li>保证计算的开始位置 start index 和结束位置 stop index，渲染数据必须在可视区域内</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 只针对计算代码的书写</span></span>
<span class="line"><span style="color:#6A737D;">// 假设数据格式为</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * [</span></span>
<span class="line"><span style="color:#6A737D;"> *   { height: 100, ... },</span></span>
<span class="line"><span style="color:#6A737D;"> *   { height: 150, ... },</span></span>
<span class="line"><span style="color:#6A737D;"> *   ...,</span></span>
<span class="line"><span style="color:#6A737D;"> * ];</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> itemCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 总的数据条数</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 滚动高度</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> overscancount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 预留条数 多展示两条数据</span></span>
<span class="line"><span style="color:#6A737D;">// 获取每一项的偏移高度</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getItemMeta</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> offset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 偏移高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data[index].height; </span><span style="color:#6A737D;">// 每一项的高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> index; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    offset </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> data[i].height;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    offset,</span></span>
<span class="line"><span style="color:#E1E4E8;">    size,</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取开始位置</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStartIndexForOffset</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">offset</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 初始位置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(index </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> itemCount </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getItemMeta</span><span style="color:#E1E4E8;">(index).offset </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> offset) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 每次 +1 来确定初始位置</span></span>
<span class="line"><span style="color:#E1E4E8;">    index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取结束位置</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStopIndexForOffset</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">offset</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> startIndex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getStartIndexForOffset</span><span style="color:#E1E4E8;">(offset);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 开始位置偏移信息 =&gt; { offset, size }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> startmeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getItemMeta</span><span style="color:#E1E4E8;">(startIndex);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 最大偏移高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> maxOffset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> offset </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> height;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 当前偏移高度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> curOffset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> startmeta.offset </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> startmeta.size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 因为高度未固定，所以不能通过取整的方式来计算，而应该对开始位置 - 结束位置的每一项偏移高度进行预算，来确定结束位置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> stopIndex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> startIndex;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(stopIndex </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> itemCount </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> curOffset </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> offset) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    stopIndex</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ++ 之后再计算当前位置偏移高度</span></span>
<span class="line"><span style="color:#E1E4E8;">    curOffset </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getItemMeta</span><span style="color:#E1E4E8;">(stopIndex).size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 渲染数据</span></span>
<span class="line"><span style="color:#E1E4E8;">[].slice.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(data, Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, startIndex </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> overscancount), Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(stopIndex </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> overscancount, itemCount </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)))</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* start */</span></span>
<span class="line"><span style="color:#6A737D;">// 只针对计算代码的书写</span></span>
<span class="line"><span style="color:#6A737D;">// 假设数据格式为</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * [</span></span>
<span class="line"><span style="color:#6A737D;"> *   { height: 100, ... },</span></span>
<span class="line"><span style="color:#6A737D;"> *   { height: 150, ... },</span></span>
<span class="line"><span style="color:#6A737D;"> *   ...,</span></span>
<span class="line"><span style="color:#6A737D;"> * ];</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> itemCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 总的数据条数</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 滚动高度</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> overscancount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 预留条数 多展示两条数据</span></span>
<span class="line"><span style="color:#6A737D;">// 获取每一项的偏移高度</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getItemMeta</span><span style="color:#24292E;">(</span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> offset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 偏移高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data[index].height; </span><span style="color:#6A737D;">// 每一项的高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> index; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    offset </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> data[i].height;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    offset,</span></span>
<span class="line"><span style="color:#24292E;">    size,</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取开始位置</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStartIndexForOffset</span><span style="color:#24292E;">(</span><span style="color:#E36209;">offset</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 初始位置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> itemCount </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getItemMeta</span><span style="color:#24292E;">(index).offset </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> offset) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 每次 +1 来确定初始位置</span></span>
<span class="line"><span style="color:#24292E;">    index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 获取结束位置</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStopIndexForOffset</span><span style="color:#24292E;">(</span><span style="color:#E36209;">offset</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> startIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getStartIndexForOffset</span><span style="color:#24292E;">(offset);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 开始位置偏移信息 =&gt; { offset, size }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> startmeta </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getItemMeta</span><span style="color:#24292E;">(startIndex);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 最大偏移高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> maxOffset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> offset </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> height;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 当前偏移高度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> curOffset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> startmeta.offset </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> startmeta.size;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 因为高度未固定，所以不能通过取整的方式来计算，而应该对开始位置 - 结束位置的每一项偏移高度进行预算，来确定结束位置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> stopIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> startIndex;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(stopIndex </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> itemCount </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> curOffset </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> offset) {</span></span>
<span class="line"><span style="color:#24292E;">    stopIndex</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ++ 之后再计算当前位置偏移高度</span></span>
<span class="line"><span style="color:#24292E;">    curOffset </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getItemMeta</span><span style="color:#24292E;">(stopIndex).size;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 渲染数据</span></span>
<span class="line"><span style="color:#24292E;">[].slice.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(data, Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, startIndex </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> overscancount), Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(stopIndex </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> overscancount, itemCount </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#6A737D;">/* end */</span></span></code></pre></div><p><strong>补充</strong></p><ul><li>计算开始位置 react-window 采用的是二分查找的方式来确定偏移量最接近滚动偏移位置（有兴趣可以看看 react-window 源码）</li></ul><h2 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h2><ul><li>如果上述描述不对，还请多多指点</li></ul><p>End</p>`,32),t=[e];function c(r,E,y,i,F,A){return n(),a("div",null,t)}const h=s(o,[["render",c]]);export{d as __pageData,h as default};
