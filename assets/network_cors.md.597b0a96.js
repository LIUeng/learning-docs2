import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0e8ae64e.js";const u=JSON.parse('{"title":"CORS","description":"","frontmatter":{},"headers":[],"relativePath":"network/cors.md","filePath":"network/cors.md","lastUpdated":1670330848000}'),o={name:"network/cors.md"},l=e(`<h1 id="cors" tabindex="-1">CORS <a class="header-anchor" href="#cors" aria-label="Permalink to &quot;CORS&quot;">​</a></h1><p>Cross-Origin Resource Sharing 跨域资源共享</p><div class="tip custom-block"><p class="custom-block-title">定义</p><p>由一系列传输的 Http Headers 头组成，这些 Http 头决定浏览器是否阻止前端 JavaScript 代码获取跨域请求的响应。</p></div><h2 id="cors-headers" tabindex="-1">Cors Headers <a class="header-anchor" href="#cors-headers" aria-label="Permalink to &quot;Cors Headers&quot;">​</a></h2><p>cors headers 给 web 服务器权限，允许跨域请求访问到它们的资源</p><h3 id="access-control-allow-origin" tabindex="-1">Access-Control-Allow-Origin <a class="header-anchor" href="#access-control-allow-origin" aria-label="Permalink to &quot;Access-Control-Allow-Origin&quot;">​</a></h3><p>指示请求的资源能共享给哪些域</p><h3 id="access-control-allow-credentials" tabindex="-1">Access-Control-Allow-Credentials <a class="header-anchor" href="#access-control-allow-credentials" aria-label="Permalink to &quot;Access-Control-Allow-Credentials&quot;">​</a></h3><p>指示当请求的凭证标记为 true 时，是否响应该请求</p><h3 id="access-control-allow-headers" tabindex="-1">Access-Control-Allow-Headers <a class="header-anchor" href="#access-control-allow-headers" aria-label="Permalink to &quot;Access-Control-Allow-Headers&quot;">​</a></h3><p>用在对预请求的响应中，指示实际的请求中可以使用哪些 HTTP 头</p><h3 id="access-control-allow-methods" tabindex="-1">Access-Control-Allow-Methods <a class="header-anchor" href="#access-control-allow-methods" aria-label="Permalink to &quot;Access-Control-Allow-Methods&quot;">​</a></h3><p>指定对预请求的响应中，哪些 HTTP 方法允许访问请求的资源</p><h3 id="access-control-expose-headers" tabindex="-1">Access-Control-Expose-Headers <a class="header-anchor" href="#access-control-expose-headers" aria-label="Permalink to &quot;Access-Control-Expose-Headers&quot;">​</a></h3><p>指示哪些 HTTP 头的名称能在响应中列出</p><h3 id="access-control-max-age" tabindex="-1">Access-Control-Max-Age <a class="header-anchor" href="#access-control-max-age" aria-label="Permalink to &quot;Access-Control-Max-Age&quot;">​</a></h3><p>指示预请求的结果能被缓存多久</p><h3 id="access-control-request-headers" tabindex="-1">Access-Control-Request-Headers <a class="header-anchor" href="#access-control-request-headers" aria-label="Permalink to &quot;Access-Control-Request-Headers&quot;">​</a></h3><p>用于发起一个预请求，告知服务器正式请求会使用哪些 HTTP 头</p><h3 id="access-control-request-method" tabindex="-1">Access-Control-Request-Method <a class="header-anchor" href="#access-control-request-method" aria-label="Permalink to &quot;Access-Control-Request-Method&quot;">​</a></h3><p>用于发起一个预请求，告知服务器正式请求会使用哪一种 HTTP 请求方法</p><h3 id="origin" tabindex="-1">Origin <a class="header-anchor" href="#origin" aria-label="Permalink to &quot;Origin&quot;">​</a></h3><p>指示获取资源的请求是从什么域发起的</p><h2 id="同源策略" tabindex="-1">同源策略 <a class="header-anchor" href="#同源策略" aria-label="Permalink to &quot;同源策略&quot;">​</a></h2><p>same-origin 如果两个 URL 的 protocol、port 和 host 都相同的话，则这两个 URL 同源。</p><h3 id="document-domain" tabindex="-1">document.domain <a class="header-anchor" href="#document-domain" aria-label="Permalink to &quot;document.domain&quot;">​</a></h3><p>允许获取当前页面的域名以及设置域名下的子域名（同源）</p><h2 id="跨域访问的几种方式" tabindex="-1">跨域访问的几种方式 <a class="header-anchor" href="#跨域访问的几种方式" aria-label="Permalink to &quot;跨域访问的几种方式&quot;">​</a></h2><h3 id="window-postmessage" tabindex="-1">window.postMessage <a class="header-anchor" href="#window-postmessage" aria-label="Permalink to &quot;window.postMessage&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">otherWindow.</span><span style="color:#B392F0;">postMessage</span><span style="color:#E1E4E8;">(message, targetOrigin, [transfer]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">otherWindow.</span><span style="color:#6F42C1;">postMessage</span><span style="color:#24292E;">(message, targetOrigin, [transfer]);</span></span></code></pre></div><ul><li>otherWindow 对象</li></ul><p>其他窗口的一个引用，如：iframe.contentWindow、window.open(...) 返回的窗口对象、或者是命名过或数值索引的 window.frames</p><ul><li>message</li></ul><p>将要发送到其他 window 的数据。</p><ul><li>targetOrigin</li></ul><p>哪些域名可以被允许发送消息</p><ul><li>transfer</li></ul><p>Transferable 对象</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// http://test.com</span></span>
<span class="line"><span style="color:#6A737D;">// 发送方</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> popup </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.</span><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://test.com:8080&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">popup.</span><span style="color:#B392F0;">postMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;http://test.com&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, receiveMessage, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">receiveMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.origin </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://test.com:8080&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// http://test.com:8080</span></span>
<span class="line"><span style="color:#6A737D;">// 接收方</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">receiveMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.origin </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http:test.com:8080&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  event.source.</span><span style="color:#B392F0;">postMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;world&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> event.origin);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, receiveMessage, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// http://test.com</span></span>
<span class="line"><span style="color:#6A737D;">// 发送方</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> popup </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://test.com:8080&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">popup.</span><span style="color:#6F42C1;">postMessage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;http://test.com&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;message&#39;</span><span style="color:#24292E;">, receiveMessage, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">receiveMessage</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.origin </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://test.com:8080&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// http://test.com:8080</span></span>
<span class="line"><span style="color:#6A737D;">// 接收方</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">receiveMessage</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.origin </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http:test.com:8080&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  event.source.</span><span style="color:#6F42C1;">postMessage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;world&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> event.origin);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;message&#39;</span><span style="color:#24292E;">, receiveMessage, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span></code></pre></div>`,39),p=[l];function t(c,r,i,E,y,d){return a(),n("div",null,p)}const g=s(o,[["render",t]]);export{u as __pageData,g as default};
