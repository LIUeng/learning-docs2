import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.0e8ae64e.js";const I=JSON.parse('{"title":"URI 编码","description":"","frontmatter":{},"headers":[],"relativePath":"notes/javascript/URI.md","filePath":"notes/javascript/URI.md","lastUpdated":1670330848000}'),c={name:"notes/javascript/URI.md"},n=t('<h1 id="uri-编码" tabindex="-1">URI 编码 <a class="header-anchor" href="#uri-编码" aria-label="Permalink to &quot;URI 编码&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">URI 编码</p><p>URI 方法能对所有的 Unicode 码进行编码，escape &amp; unescape 基本别废弃，它只对 ASCII 码进行编码</p></div><h2 id="unescape" tabindex="-1">unescape <a class="header-anchor" href="#unescape" aria-label="Permalink to &quot;unescape&quot;">​</a></h2><p>ASCII 编码</p><h2 id="escape" tabindex="-1">escape <a class="header-anchor" href="#escape" aria-label="Permalink to &quot;escape&quot;">​</a></h2><p>ASCII 解码</p><h2 id="encodeuri" tabindex="-1">encodeURI <a class="header-anchor" href="#encodeuri" aria-label="Permalink to &quot;encodeURI&quot;">​</a></h2><blockquote><p>不会对本身属于 URI 特殊字符进行编码</p></blockquote><p>URI 特殊字符：冒号(😃 井号(#) 正斜杠(/) 问号(?)</p><h2 id="decodeuri" tabindex="-1">decodeURI <a class="header-anchor" href="#decodeuri" aria-label="Permalink to &quot;decodeURI&quot;">​</a></h2><p>解码</p><h2 id="encodeuricomponent" tabindex="-1">encodeURIComponent <a class="header-anchor" href="#encodeuricomponent" aria-label="Permalink to &quot;encodeURIComponent&quot;">​</a></h2><p>所有非标准字符编码</p><h2 id="decodeuricomponent" tabindex="-1">decodeURIComponent <a class="header-anchor" href="#decodeuricomponent" aria-label="Permalink to &quot;decodeURIComponent&quot;">​</a></h2><p>解码</p>',15),r=[n];function d(i,s,p,l,h,u){return a(),o("div",null,r)}const _=e(c,[["render",d]]);export{I as __pageData,_ as default};
