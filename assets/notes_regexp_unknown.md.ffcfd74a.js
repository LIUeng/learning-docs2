import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.0e8ae64e.js";const _=JSON.parse('{"title":"你不知道的正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"notes/regexp/unknown.md","filePath":"notes/regexp/unknown.md","lastUpdated":1670330848000}'),l={name:"notes/regexp/unknown.md"},o=p(`<h1 id="你不知道的正则表达式" tabindex="-1">你不知道的正则表达式 <a class="header-anchor" href="#你不知道的正则表达式" aria-label="Permalink to &quot;你不知道的正则表达式&quot;">​</a></h1><h2 id="逗号分隔千分位" tabindex="-1">逗号分隔千分位 <a class="header-anchor" href="#逗号分隔千分位" aria-label="Permalink to &quot;逗号分隔千分位&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1234567890&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">\\B</span><span style="color:#DBEDFF;">(?=(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#DBEDFF;">)</span><span style="color:#F97583;">+$</span><span style="color:#DBEDFF;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 分隔</span></span>
<span class="line"><span style="color:#E1E4E8;">a.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(reg, </span><span style="color:#9ECBFF;">&#39;,&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// output</span></span>
<span class="line"><span style="color:#6A737D;">// &#39;1,234,567,890&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1234567890&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#D73A49;">\\B</span><span style="color:#032F62;">(?=(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">)/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 分隔</span></span>
<span class="line"><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(reg, </span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// output</span></span>
<span class="line"><span style="color:#6A737D;">// &#39;1,234,567,890&#39;</span></span></code></pre></div>`,3),e=[o];function t(c,r,y,i,E,d){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{_ as __pageData,h as default};
