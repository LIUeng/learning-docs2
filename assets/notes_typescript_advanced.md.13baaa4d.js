import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.0e8ae64e.js";const m=JSON.parse('{"title":"Typescript 高级","description":"","frontmatter":{},"headers":[],"relativePath":"notes/typescript/advanced.md","filePath":"notes/typescript/advanced.md","lastUpdated":1670330848000}'),p={name:"notes/typescript/advanced.md"},o=n(`<h1 id="typescript-高级" tabindex="-1">Typescript 高级 <a class="header-anchor" href="#typescript-高级" aria-label="Permalink to &quot;Typescript 高级&quot;">​</a></h1><h2 id="advanced-type" tabindex="-1">Advanced Type <a class="header-anchor" href="#advanced-type" aria-label="Permalink to &quot;Advanced Type&quot;">​</a></h2><ul><li>用户指定类型 user-defined <ul><li>标识符 is</li></ul></li><li>in 关键字</li><li>typeof 关键字</li><li>null/undefined types <ul><li>null undefined 是两种不同的类型</li><li>可选参数或者属性 --strictNullChecks 参数或者属性可以为 undefined 不能为 null</li></ul></li><li>类型断言 type-assertion <ul><li>?? = a ? &#39;&#39; : &#39;&#39;;</li><li>! = user!.id!.length = undefined</li></ul></li><li>类型别名 type-aliases <ul><li>树形结构</li></ul></li><li>interface VS type <ul><li>接口可以继承 type 可以使用交叉类型实现 &amp;</li><li>接口可以重复定义（相当于增加新的属性类型定义）type 不能重复定义会报错</li></ul></li><li>索引类型 <ul><li>keyof 关键字</li></ul></li><li>索引类型 索引签名 <ul><li>对象键指定为 string = string | number, 指定为 number, 只能为 number 类型</li></ul></li><li>映射类型 mapped types <ul><li>封装</li><li>类似 for...in 操作符，对一个已定义的类型遍历操作</li><li>不能添加新的属性定义，如果需要使用交叉类型 &amp;</li></ul></li><li>条件类型 conditional types <ul><li>?</li><li>可以配合映射类型使用</li></ul></li><li>推断类型 infer <ul><li>infer 关键字配合 extends 使用</li></ul></li></ul><h2 id="utility-types" tabindex="-1">Utility types <a class="header-anchor" href="#utility-types" aria-label="Permalink to &quot;Utility types&quot;">​</a></h2><p>实体类型</p><ul><li>Partial&lt;Type&gt; 部分属性</li><li>Readonly&lt;Type&gt; 只读属性</li><li>Record&lt;Keys, Type&gt; 记录一组 Type 类型存在 keys 的集合当中</li><li>Pick&lt;Type, Keys&gt; 选择 Type 类型中需要存在的 keys 集合</li><li>Omit&lt;Type, Keys&gt; 反向选择 Type 类型中存在的 keys 集合</li><li>Exclude&lt;Type, ExcludedUnion&gt; 排除 Type 类型中存在 ExcludedUnion 组合类型的值</li><li>Extract&lt;Type, Union&gt; 并集</li><li>NonNullable&lt;Type&gt; 去除 Type 类型中的 null undefined</li><li>Parameters&lt;Type&gt; 构造一组元组类型使用在函数参数当中</li><li>ConstructorParameters&lt;Type&gt; 构造一组元组类型或者数组类型使用在构造函数当中</li><li>ReturnType&lt;Type&gt; 返回类型</li><li>InstanceType&lt;Type&gt; 实例类型</li><li>Required&lt;Type&gt; 与 Partial 相反</li><li>ThisParameterType&lt;Type&gt; 用于 this 作为函数参数时使用</li><li>OmitThisParameter&lt;Type&gt; 如果没有 this 的绑定，可以使用此类型用作绑定 this</li><li>ThisType&lt;Type&gt; --noImplicitThis 如果没有指定规则，必须指定 this 强绑定</li></ul><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-label="Permalink to &quot;Modules&quot;">​</a></h2><p>import/export</p><blockquote><p>commonjs/requirejs(amd)/umd/system/es2015/esnext</p></blockquote><h3 id="import-a-moudle-from-side-effects-only" tabindex="-1">Import a moudle from side-effects only <a class="header-anchor" href="#import-a-moudle-from-side-effects-only" aria-label="Permalink to &quot;Import a moudle from side-effects only&quot;">​</a></h3><blockquote><p>有些模块使用了其他模块设置了一些全局状态（没有明显的导出 exports）</p></blockquote><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./my-module.js&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./my-module.js&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="importing-types" tabindex="-1">Importing Types <a class="header-anchor" href="#importing-types" aria-label="Permalink to &quot;Importing Types&quot;">​</a></h3><blockquote><p>typescript 3.8 可以使用 import type（为了配合 babel isolatedModules 配置）</p></blockquote><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// before</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { apiResponseType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./api&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// now</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> { apiResponseType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./api&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// before</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { apiResponseType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./api&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// now</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> { apiResponseType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./api&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="optional-module-loading" tabindex="-1">Optional Module Loading <a class="header-anchor" href="#optional-module-loading" aria-label="Permalink to &quot;Optional Module Loading&quot;">​</a></h3><ul><li>条件加载模块（仅在需要时加载模块）配合 typeof 使用（产生值的类型，模块的类型）</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// node js</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#6A737D;">// require js</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[], </span><span style="color:#B392F0;">onLoad</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">[]) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#6A737D;">// System js</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">System</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">() {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// node js</span></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#E36209;">moduleName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#6A737D;">// require js</span></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#E36209;">moduleName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[], </span><span style="color:#6F42C1;">onLoad</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">args</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#6A737D;">// System js</span></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">System</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">() {}</span></span></code></pre></div><h3 id="ambient-modules" tabindex="-1">Ambient Modules <a class="header-anchor" href="#ambient-modules" aria-label="Permalink to &quot;Ambient Modules&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// node.d.ts</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Url</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">protocol</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">({ </span><span style="color:#FFAB70;">urlStr</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">string</span><span style="color:#E1E4E8;"> })</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Url</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// node.d.ts</span></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">module</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Url</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">protocol</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">urlStr</span><span style="color:#24292E;">: </span><span style="color:#E36209;">string</span><span style="color:#24292E;"> })</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Url</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>引入</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;referenct path=&quot;node.d.ts&quot; /&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Url </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> myUrl </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">URL</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://www.typescriptlang.org&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;referenct path=&quot;node.d.ts&quot; /&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Url </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> myUrl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">URL</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://www.typescriptlang.org&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="umd-modules" tabindex="-1">UMD modules <a class="header-anchor" href="#umd-modules" aria-label="Permalink to &quot;UMD modules&quot;">​</a></h3><ul><li>通过导入或全局变量访问库</li><li>全局引用文件内不能包含 import/export 语法</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// math-lib.d.ts</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isPrime</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">x</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mathLib</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// import</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { isPrime } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./math-lib&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">isPrime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">mathLib.</span><span style="color:#B392F0;">isPrime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// ERROR 全局引用不能和import一起</span></span>
<span class="line"><span style="color:#6A737D;">// 单独使用 OK</span></span>
<span class="line"><span style="color:#E1E4E8;">mathLib.</span><span style="color:#B392F0;">isPirme</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// math-lib.d.ts</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isPrime</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mathLib</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// import</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { isPrime } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./math-lib&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">isPrime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">mathLib.</span><span style="color:#6F42C1;">isPrime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// ERROR 全局引用不能和import一起</span></span>
<span class="line"><span style="color:#6A737D;">// 单独使用 OK</span></span>
<span class="line"><span style="color:#24292E;">mathLib.</span><span style="color:#6F42C1;">isPirme</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="module-resolution" tabindex="-1">Module Resolution <a class="header-anchor" href="#module-resolution" aria-label="Permalink to &quot;Module Resolution&quot;">​</a></h2><p>模块路径解析</p><h3 id="相对路径-非相对路径" tabindex="-1">相对路径 &amp; 非相对路径 <a class="header-anchor" href="#相对路径-非相对路径" aria-label="Permalink to &quot;相对路径 &amp; 非相对路径&quot;">​</a></h3><ul><li>非相对路径会根据 tsconfig.json 配置中的 baseUrl 来寻找，或者根据定义的 Ambient Modules 来查找</li></ul><h3 id="常见解析-classic" tabindex="-1">常见解析 classic <a class="header-anchor" href="#常见解析-classic" aria-label="Permalink to &quot;常见解析 classic&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// /root/src/folder/A.ts</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { b } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;moduleB&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// /root/src/folder/A.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { b } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;moduleB&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li>/root/src/folder/moduleB.ts</li><li>/root/src/folder/moduleB.d.ts</li><li>/root/src/moduleB.ts</li><li>/root/src/moduleB.d.ts</li><li>/root/moduleB.ts</li><li>/root/moduleB.d.ts</li><li>/moduleB.ts</li><li>/moduleB.d.ts</li></ul><h3 id="node-js-解析" tabindex="-1">Node.js 解析 <a class="header-anchor" href="#node-js-解析" aria-label="Permalink to &quot;Node.js 解析&quot;">​</a></h3><blockquote><p>相对路径 /root/src/moduleA.js =&gt; var b = require(&#39;./moduleB&#39;);</p></blockquote><ul><li>/root/src/moduleB.js 是否存在</li><li>/root/src/moduleB/package.json 中的 main 属性指向哪里</li><li>/root/src/moduelB/index.js 存在</li></ul><blockquote><p>非相对路径 /root/src/moduleA.js =&gt; var b = require(&#39;moduleB&#39;);</p></blockquote><ul><li><p>/root/src/node_modules/moduleB.js</p></li><li><p>/root/src/node_modules/moduleB/package.json (if it specifies a &quot;main&quot; property)</p></li><li><p>/root/src/node_modules/moduleB/index.js</p></li><li><p>/root/node_modules/moduleB.js</p></li><li><p>/root/node_modules/moduleB/package.json (if it specifies a &quot;main&quot; property)</p></li><li><p>/root/node_modules/moduleB/index.js</p></li><li><p>/node_modules/moduleB.js</p></li><li><p>/node_modules/moduleB/package.json (if it specifies a &quot;main&quot; property)</p></li><li><p>/node_modules/moduleB/index.js</p></li></ul><p><code>出现以上情形，查找到为止</code></p><h3 id="typescript-解析" tabindex="-1">Typescript 解析 <a class="header-anchor" href="#typescript-解析" aria-label="Permalink to &quot;Typescript 解析&quot;">​</a></h3><blockquote><p>相对路径 /root/src/moduleA.ts =&gt; import { b } from &quot;./moduleB&quot;</p></blockquote><ul><li>/root/src/moduleB.ts</li><li>/root/src/moduleB.tsx</li><li>/root/src/moduleB.d.ts</li><li>/root/src/moduleB/package.json (if it specifies a &quot;types&quot; property)</li><li>/root/src/moduleB/index.ts</li><li>/root/src/moduleB/index.tsx</li><li>/root/src/moduleB/index.d.ts</li></ul><blockquote><p>非相对路径 /root/src/moduleA.ts =&gt; import { b } from &quot;moduleB&quot;</p></blockquote><ul><li><p>/root/src/node_modules/moduleB.ts</p></li><li><p>/root/src/node_modules/moduleB.tsx</p></li><li><p>/root/src/node_modules/moduleB.d.ts</p></li><li><p>/root/src/node_modules/moduleB/package.json (if it specifies a &quot;types&quot; property)</p></li><li><p>/root/src/node_modules/@types/moduleB.d.ts</p></li><li><p>/root/src/node_modules/moduleB/index.ts</p></li><li><p>/root/src/node_modules/moduleB/index.tsx</p></li><li><p>/root/src/node_modules/moduleB/index.d.ts</p></li><li><p>/root/node_modules/moduleB.ts</p></li><li><p>/root/node_modules/moduleB.tsx</p></li><li><p>/root/node_modules/moduleB.d.ts</p></li><li><p>/root/node_modules/moduleB/package.json (if it specifies a &quot;types&quot; property)</p></li><li><p>/root/node_modules/@types/moduleB.d.ts</p></li><li><p>/root/node_modules/moduleB/index.ts</p></li><li><p>/root/node_modules/moduleB/index.tsx</p></li><li><p>/root/node_modules/moduleB/index.d.ts</p></li><li><p>/node_modules/moduleB.ts</p></li><li><p>/node_modules/moduleB.tsx</p></li><li><p>/node_modules/moduleB.d.ts</p></li><li><p>/node_modules/moduleB/package.json (if it specifies a &quot;types&quot; property)</p></li><li><p>/node_modules/@types/moduleB.d.ts</p></li><li><p>/node_modules/moduleB/index.ts</p></li><li><p>/node_modules/moduleB/index.tsx</p></li><li><p>/node_modules/moduleB/index.d.ts</p></li></ul><p><code>出现以上情形，查找到为止</code></p><h3 id="baseurl-配置" tabindex="-1">baseUrl 配置 <a class="header-anchor" href="#baseurl-配置" aria-label="Permalink to &quot;baseUrl 配置&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;compilerOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;baseUrl&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;.&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// This must be specified if &quot;paths&quot; is.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;paths&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;jquery&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;node_modules/jquery/dist/jquery&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// This mapping is relative to &quot;baseUrl&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;baseUrl&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// This must be specified if &quot;paths&quot; is.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;paths&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;jquery&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;node_modules/jquery/dist/jquery&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// This mapping is relative to &quot;baseUrl&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>rootDirs 配置（虚拟目录，保证相对引用正确）</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;compilerOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;rootDirs&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;src/views&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;generated/templates/views&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rootDirs&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;src/views&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;generated/templates/views&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">day1-gulp1</span></span>
<span class="line"><span style="color:#e1e4e8;">├── README.md</span></span>
<span class="line"><span style="color:#e1e4e8;">├── gulpfile.js</span></span>
<span class="line"><span style="color:#e1e4e8;">├── js</span></span>
<span class="line"><span style="color:#e1e4e8;">│ └── main.js</span></span>
<span class="line"><span style="color:#e1e4e8;">├── package-lock.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── package.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── src</span></span>
<span class="line"><span style="color:#e1e4e8;">│ ├── css</span></span>
<span class="line"><span style="color:#e1e4e8;">│ │ ├── style.css</span></span>
<span class="line"><span style="color:#e1e4e8;">│ │ └── style1.css</span></span>
<span class="line"><span style="color:#e1e4e8;">│ ├── index.html</span></span>
<span class="line"><span style="color:#e1e4e8;">│ └── ts</span></span>
<span class="line"><span style="color:#e1e4e8;">│ └── main.ts</span></span>
<span class="line"><span style="color:#e1e4e8;">└── tsconfig.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">day1-gulp1</span></span>
<span class="line"><span style="color:#24292e;">├── README.md</span></span>
<span class="line"><span style="color:#24292e;">├── gulpfile.js</span></span>
<span class="line"><span style="color:#24292e;">├── js</span></span>
<span class="line"><span style="color:#24292e;">│ └── main.js</span></span>
<span class="line"><span style="color:#24292e;">├── package-lock.json</span></span>
<span class="line"><span style="color:#24292e;">├── package.json</span></span>
<span class="line"><span style="color:#24292e;">├── src</span></span>
<span class="line"><span style="color:#24292e;">│ ├── css</span></span>
<span class="line"><span style="color:#24292e;">│ │ ├── style.css</span></span>
<span class="line"><span style="color:#24292e;">│ │ └── style1.css</span></span>
<span class="line"><span style="color:#24292e;">│ ├── index.html</span></span>
<span class="line"><span style="color:#24292e;">│ └── ts</span></span>
<span class="line"><span style="color:#24292e;">│ └── main.ts</span></span>
<span class="line"><span style="color:#24292e;">└── tsconfig.json</span></span></code></pre></div><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">src</span></span>
<span class="line"><span style="color:#e1e4e8;">└── views</span></span>
<span class="line"><span style="color:#e1e4e8;">|--└── view1.ts (imports &#39;./template1&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">|--└── view2.ts</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">generated</span></span>
<span class="line"><span style="color:#e1e4e8;">└── templates</span></span>
<span class="line"><span style="color:#e1e4e8;">|--└── views</span></span>
<span class="line"><span style="color:#e1e4e8;">|--|--└── template1.ts (imports &#39;./view2&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">src</span></span>
<span class="line"><span style="color:#24292e;">└── views</span></span>
<span class="line"><span style="color:#24292e;">|--└── view1.ts (imports &#39;./template1&#39;)</span></span>
<span class="line"><span style="color:#24292e;">|--└── view2.ts</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">generated</span></span>
<span class="line"><span style="color:#24292e;">└── templates</span></span>
<span class="line"><span style="color:#24292e;">|--└── views</span></span>
<span class="line"><span style="color:#24292e;">|--|--└── template1.ts (imports &#39;./view2&#39;)</span></span></code></pre></div><h3 id="测试解析路径" tabindex="-1">测试解析路径 <a class="header-anchor" href="#测试解析路径" aria-label="Permalink to &quot;测试解析路径&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">tsc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--traceResolution</span></span>
<span class="line"><span style="color:#B392F0;">tsc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--noResolve</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">tsc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--traceResolution</span></span>
<span class="line"><span style="color:#6F42C1;">tsc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--noResolve</span></span></code></pre></div><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">​</a></h2><p>命令空间</p><ul><li>文件定义中多个 namesapce 可以合并</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">reference</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">path</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Validation.ts&quot;</span><span style="color:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Validation</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lettersRegexp</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">[A-Za-z]</span><span style="color:#F97583;">+$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LettersOnlyValidator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringValidator</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">isAcceptable</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">s</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> lettersRegexp.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(s);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">reference</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Validation.ts&quot;</span><span style="color:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Validation</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lettersRegexp</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">[A-Za-z]</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LettersOnlyValidator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringValidator</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">isAcceptable</span><span style="color:#24292E;">(</span><span style="color:#E36209;">s</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> lettersRegexp.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(s);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>别名</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Shapes</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Polygons</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Triangle</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Square</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> polygons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Shapes</span><span style="color:#E1E4E8;">.Polygons;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> sq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> polygons.</span><span style="color:#B392F0;">Square</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Shapes</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Polygons</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Triangle</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Square</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> polygons </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Shapes</span><span style="color:#24292E;">.Polygons;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> sq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> polygons.</span><span style="color:#6F42C1;">Square</span><span style="color:#24292E;">();</span></span></code></pre></div><ul><li>可以配合其他包声明文件扩展</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// D3.d.ts</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">D3</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Selector</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// D3.d.ts</span></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">D3</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Selector</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="namespaces-modules" tabindex="-1">Namespaces &amp; Modules <a class="header-anchor" href="#namespaces-modules" aria-label="Permalink to &quot;Namespaces &amp; Modules&quot;">​</a></h2><blockquote><p>Modules</p></blockquote><ul><li><p>可以包含代码和声明</p></li><li><p>依赖于模块加载器（CommonJs/Requre.js）或者 ES 模块的运行时</p></li><li><p>更好的代码重用性，更强的隔离性以及对捆绑的更好工具支持</p></li></ul><blockquote><p>Namespaces</p></blockquote><ul><li><p>多个文件可以使用 namespace 合并</p></li><li><p>可以配合使用 --outFile</p></li><li><p>全局名称空间污染，很难识别组件依赖性</p></li></ul><h2 id="triple-slash-directives" tabindex="-1">Triple-Slash Directives <a class="header-anchor" href="#triple-slash-directives" aria-label="Permalink to &quot;Triple-Slash Directives&quot;">​</a></h2><blockquote><p>三斜杠指令</p></blockquote><ul><li>引入声明的文件（--out --outFile --noResolve)</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">reference</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">path</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">reference</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre></div><ul><li>引入@type/文件</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">reference</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">types</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">reference</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">types</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre></div><ul><li>引入系统声明文件</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">reference</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">lib</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">reference</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">lib</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre></div><ul><li>忽略 lib 检查（--noLib --skipDefaultLibCheck)</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">reference</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">no-default-lib</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">reference</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">no-default-lib</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#6A737D;"> /&gt;</span></span></code></pre></div><ul><li>amd 模式</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">amd-module</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;NamedModule&quot;</span><span style="color:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">C</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#22863A;">amd-module</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;NamedModule&quot;</span><span style="color:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">C</span><span style="color:#24292E;"> {}</span></span></code></pre></div><p>编译成 js 文件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;NamedModule&#39;</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&#39;require&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;exports&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">require</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">C</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  })();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;NamedModule&#39;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&#39;require&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;exports&#39;</span><span style="color:#24292E;">], </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">require</span><span style="color:#24292E;">, </span><span style="color:#E36209;">exports</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">C</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">C</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">C</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  })();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">C</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">C</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><ul><li>amd-dependency 已遗弃</li></ul>`,80),e=[o];function t(c,r,i,y,E,d){return a(),l("div",null,e)}const F=s(p,[["render",t]]);export{m as __pageData,F as default};
