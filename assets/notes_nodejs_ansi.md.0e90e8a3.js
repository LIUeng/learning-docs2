import{_ as t,o as d,c as e,Q as a}from"./chunks/framework.0e8ae64e.js";const I=JSON.parse('{"title":"ANSI escape sequences","description":"","frontmatter":{},"headers":[],"relativePath":"notes/nodejs/ansi.md","filePath":"notes/nodejs/ansi.md","lastUpdated":1682600590000}'),r={name:"notes/nodejs/ansi.md"},o=a('<h1 id="ansi-escape-sequences" tabindex="-1">ANSI escape sequences <a class="header-anchor" href="#ansi-escape-sequences" aria-label="Permalink to &quot;ANSI escape sequences&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">C0 C1</p><p>C0 与 C1 是 ISO/IEC 2022 定义的控制字符集，C0 控制字符集的码位范围是 hex00-1F，C1 控制字符集的码位范围是 hex80-9F</p></div><p>ANSI 转义序列</p><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>一种带内信号的转义序列标准，用于控制视频文本终端上的的光标位置、颜色和其他选项</p><h2 id="转义序列" tabindex="-1">转义序列 <a class="header-anchor" href="#转义序列" aria-label="Permalink to &quot;转义序列&quot;">​</a></h2><p>所有序列都以 ASCII 字符 ESC（27/十六进制 0x1b）开头，第二个字节则是 0x40-0x5F（ASCII @A-Z[\\]^_）范围内的字符</p><blockquote><p>除 ESC 之外的其他 C0 代码</p></blockquote><ul><li>BEL</li><li>BS</li><li>CR</li><li>LF</li><li>FF</li><li>TAB</li><li>VT</li><li>SO</li><li>SI</li></ul><h2 id="csi-序列" tabindex="-1">CSI 序列 <a class="header-anchor" href="#csi-序列" aria-label="Permalink to &quot;CSI 序列&quot;">​</a></h2><p>CSI 序列由 <code>ESC [</code>、若干个（包括 0 个）参数字节、若干个中间字节，以及一个最终字节组成</p><blockquote><p>CSI 序列在 <code>ESC [</code>之后各个组成部分的字符范围</p></blockquote><table><thead><tr><th>组成部分</th><th>字符范围</th><th>ASCII</th></tr></thead><tbody><tr><td>参数字节</td><td>0x30–0x3F</td><td>0–9:;&lt;=&gt;?</td></tr><tr><td>中间字节</td><td>0x20–0x2F</td><td>空格、!&quot;#$%&amp;&#39;()*+,-./</td></tr><tr><td>最终字节</td><td>0x40–0x7E</td><td>@A–Z[]^_`a–z{</td></tr></tbody></table><blockquote><p>部分 ANSI 控制序列</p></blockquote><table><thead><tr><th>代码</th><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>CSI n A</td><td>光标上移</td><td>光标向指定的方向移动 n 格，光标在屏幕边缘，无效</td></tr><tr><td>CSI n B</td><td>光标下移</td><td></td></tr><tr><td>CSI n C</td><td>光标前移</td><td></td></tr><tr><td>CSI n D</td><td>光标后移</td><td></td></tr><tr><td>CSI n E</td><td>光标移到下一行</td><td>光标移动到下面第 n（默认 1）行的开头</td></tr><tr><td>CSI n F</td><td>光标移到上一行</td><td>光标移动到上面第 n（默认 1）行的开头</td></tr><tr><td>CSI n G</td><td>光标后移</td><td>光标移动到第 n（默认 1）列</td></tr><tr><td>CSI n;m H</td><td>光标位置</td><td>光标移动到第 n 行、第 m 列。值从 1 开始，且默认为 1（左上角）</td></tr><tr><td>CSI n J</td><td>擦除显示</td><td>清除屏幕的部分区域（取值 0 1 2）</td></tr><tr><td>CSI n K</td><td>擦除行</td><td>清除行内的部分区域（取值 0 1 2）</td></tr><tr><td>CSI n S</td><td>向上滚动</td><td>整页向上滚动 n（默认 1）行</td></tr><tr><td>CSI n T</td><td>向下滚动</td><td>整页向下滚动 n（默认 1）行</td></tr><tr><td>CSI n m</td><td>SGR - 选择图形再现</td><td>设置 SGR 参数，包括文字颜色（CSI 0m 重置/常规）</td></tr></tbody></table><h1 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h1><p><a href="https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797" target="_blank" rel="noreferrer">更多阅读</a></p>',17),n=[o];function s(l,i,c,h,S,p){return d(),e("div",null,n)}const u=t(r,[["render",s]]);export{I as __pageData,u as default};
