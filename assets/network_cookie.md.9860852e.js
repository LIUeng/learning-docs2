import{_ as a,o as s,c as e,Q as o}from"./chunks/framework.0e8ae64e.js";const E=JSON.parse('{"title":"Cookies","description":"","frontmatter":{},"headers":[],"relativePath":"network/cookie.md","filePath":"network/cookie.md","lastUpdated":1670330848000}'),t={name:"network/cookie.md"},n=o(`<h1 id="cookies" tabindex="-1">Cookies <a class="header-anchor" href="#cookies" aria-label="Permalink to &quot;Cookies&quot;">​</a></h1><p>基于 HTTP 协议：由一系列字符串组成，存储在客户端（不能超过 4kb），客户端和服务端建立安全通信验证</p><h2 id="读取" tabindex="-1">读取 <a class="header-anchor" href="#读取" aria-label="Permalink to &quot;读取&quot;">​</a></h2><p>带有 http-only 属性的 cookie 不能被读取</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(document.cookie);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(document.cookie);</span></span></code></pre></div><h2 id="写入" tabindex="-1">写入 <a class="header-anchor" href="#写入" aria-label="Permalink to &quot;写入&quot;">​</a></h2><p>已经存在的 cookie 不会被删除</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.cookie </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user=name&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置多个 cookie 使用分号空格（: ）隔开</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.cookie </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user=name&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置多个 cookie 使用分号空格（: ）隔开</span></span></code></pre></div><h2 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h2><p>当前设置的 cookie 在 path 的匹配下才可携带，默认为当前的 url</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// path=/admin 匹配 /admin/anything</span></span>
<span class="line"><span style="color:#E1E4E8;">document.cookie </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user=name;path=/admin&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// path=/admin 匹配 /admin/anything</span></span>
<span class="line"><span style="color:#24292E;">document.cookie </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user=name;path=/admin&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="domain" tabindex="-1">domain <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;domain&quot;">​</a></h2><p>设置哪些域名可以访问（一级域名、二级域名）</p><h2 id="过期时间" tabindex="-1">过期时间 <a class="header-anchor" href="#过期时间" aria-label="Permalink to &quot;过期时间&quot;">​</a></h2><h3 id="expires" tabindex="-1">expires <a class="header-anchor" href="#expires" aria-label="Permalink to &quot;expires&quot;">​</a></h3><p>接收 GMT 的时间格式（date.toUTCString）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 设置一天</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">86400e3</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">toUTCString</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">document.cookie </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user=name; expires=&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> date;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 设置一天</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">86400e3</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toUTCString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">document.cookie </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user=name; expires=&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> date;</span></span></code></pre></div><h3 id="max-age" tabindex="-1">max-age <a class="header-anchor" href="#max-age" aria-label="Permalink to &quot;max-age&quot;">​</a></h3><p>接收多少秒</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 设置300s</span></span>
<span class="line"><span style="color:#E1E4E8;">document.cookie </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user=name; max-age=300&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 设置300s</span></span>
<span class="line"><span style="color:#24292E;">document.cookie </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user=name; max-age=300&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="secure" tabindex="-1">secure <a class="header-anchor" href="#secure" aria-label="Permalink to &quot;secure&quot;">​</a></h2><p>用于 HTTPS 传输携带</p><h2 id="samesite" tabindex="-1">samesite <a class="header-anchor" href="#samesite" aria-label="Permalink to &quot;samesite&quot;">​</a></h2><p>设置 httpOnly 属性, 防止 XSRF（cross-site request forgery）跨站攻击</p><ul><li>Strict === samesite</li><li>Lax 默认值</li></ul><table><thead><tr><th>请求类型</th><th>示例</th><th>正常情况</th><th>Lax</th></tr></thead><tbody><tr><td>链接</td><td><code>&lt;a href=&quot;...&quot;&gt;&lt;/a&gt;</code></td><td>发送</td><td>发送</td></tr><tr><td>预加载</td><td><code>&lt;link rel=&quot;prerender&quot; href=&quot;...&quot;&gt;&lt;/a&gt;</code></td><td>发送</td><td>发送</td></tr><tr><td>GET 表单</td><td><code>&lt;a method=&quot;GET&quot; action=&quot;...&quot;&gt;&lt;/a&gt;</code></td><td>发送</td><td>发送</td></tr><tr><td>POST 表单</td><td><code>&lt;form method=&quot;POST&quot; action=&quot;...&quot;&gt;&lt;/form&gt;</code></td><td>发送</td><td>不发送</td></tr><tr><td>iframe</td><td><code>&lt;iframe src=&quot;...&quot;&gt;&lt;/iframe&gt;</code></td><td>发送</td><td>不发送</td></tr><tr><td>AJAX</td><td><code>$.get()</code></td><td>发送</td><td>不发送</td></tr><tr><td>Image</td><td><code>&lt;img src=&quot;...&quot; /</code></td><td>发送</td><td>不发送</td></tr></tbody></table><ul><li>None</li></ul><h3 id="httponly" tabindex="-1">httpOnly <a class="header-anchor" href="#httponly" aria-label="Permalink to &quot;httpOnly&quot;">​</a></h3><p>设置 httpOnly 的 cookie 不能被 Javascript 读取访问</p><h2 id="第三方-cookie" tabindex="-1">第三方 cookie <a class="header-anchor" href="#第三方-cookie" aria-label="Permalink to &quot;第三方 cookie&quot;">​</a></h2><p>是否允许第三方网站设置 cookie</p><blockquote><p>注意</p></blockquote><p><code>如果一个脚本来自不同的域，设置的 cookie 仅属于当前域名和当前页</code></p><ul><li>Safari 不被允许</li><li>Firefox 黑名单不被允许</li></ul>`,34),l=[n];function p(c,r,i,d,h,y){return s(),e("div",null,l)}const m=a(t,[["render",p]]);export{E as __pageData,m as default};
