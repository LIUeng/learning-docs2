import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.7c0fadea.js";const o="/learning-docs2/assets/images/==.png",e="/learning-docs2/assets/images/===.png",p="/learning-docs2/assets/images/if().png",g=JSON.parse('{"title":"JS 相等性","description":"","frontmatter":{},"headers":[],"relativePath":"notes/javascript/equal.md","filePath":"notes/javascript/equal.md","lastUpdated":1675328164000}'),t={name:"notes/javascript/equal.md"},r=l('<h1 id="js-相等性" tabindex="-1">JS 相等性 <a class="header-anchor" href="#js-相等性" aria-label="Permalink to &quot;JS 相等性&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">相等性</p><p>JavaScript中的相等性检查（有的转换会感觉很奇怪，目前记住规则）</p></div><p>以下截图来源 <a href="https://github.com/dorey/JavaScript-Equality-Table" target="_blank" rel="noreferrer">Github @dorey</a></p><h2 id="相等" tabindex="-1">相等 == <a class="header-anchor" href="#相等" aria-label="Permalink to &quot;相等 ==&quot;">​</a></h2><p><code>发生强制转换类型</code></p><img src="'+o+'" alt="相等"><h2 id="严格相等" tabindex="-1">严格相等 === <a class="header-anchor" href="#严格相等" aria-label="Permalink to &quot;严格相等 ===&quot;">​</a></h2><img src="'+e+'" alt="严格相等"><h2 id="判断-if" tabindex="-1">判断 if() <a class="header-anchor" href="#判断-if" aria-label="Permalink to &quot;判断 if()&quot;">​</a></h2><img src="'+p+`" alt="if()"><h2 id="比较" tabindex="-1">比较 &gt; = &lt; <a class="header-anchor" href="#比较" aria-label="Permalink to &quot;比较 &gt; = &lt;&quot;">​</a></h2><p><code>两边都会发生转换</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {b: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {c: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> b </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> b </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> b </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {b: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {c: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> b </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> b </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> b </span><span style="color:#6A737D;">// true</span></span></code></pre></div>`,13),c=[r];function i(d,y,E,h,_,u){return a(),n("div",null,c)}const m=s(t,[["render",i]]);export{g as __pageData,m as default};
